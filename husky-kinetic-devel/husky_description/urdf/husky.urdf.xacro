<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      husky.urdf.xacro
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com>, Devon Ash <dash@clearpathrobotics.com>
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="husky" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="laser_enabled" default="false" />
  <xacro:arg name="laser_xyz" default="$(optenv HUSKY_LMS1XX_XYZ 0.2206 0.0 0.00635)" />
  <xacro:arg name="laser_rpy" default="$(optenv HUSKY_LMS1XX_RPY 0.0 0.0 0.0)" />

  <xacro:arg name="kinect_enabled" default="false" />
  <xacro:arg name="kinect_xyz" default="$(optenv HUSKY_KINECT_XYZ 0 0 0)" />
  <xacro:arg name="kinect_rpy" default="$(optenv HUSKY_KINECT_RPY 0 0.18 3.14)" />

  <xacro:arg name="robot_namespace" default="/" />
  <xacro:arg name="urdf_extras" default="empty.urdf" />

  
  <xacro:arg name="manipulator_h_enabled" default="false"/> <!-- Added the Robotis Manipulator-H -->
  <!-- Added the Robotis Manipulator-H -->
  <xacro:if value="$(arg manipulator_h_enabled)"> 
    <xacro:include filename="$(find manipulator_h_description)/urdf/manipulator_h.xacro" /> 
  </xacro:if>



  <xacro:arg name="ur5_enabled" default="false"/> <!-- Added the UR5 -->
  <xacro:include filename="$(find ur_description)/urdf/ur5.urdf.xacro" />



  <xacro:arg name="vertical_laser_enabled" default="false"/> <!-- Added the vertical laser Hokuyo UST-10LX -->
  


  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find husky_description)/urdf/decorations.urdf.xacro" />
  <xacro:include filename="$(find husky_description)/urdf/wheel.urdf.xacro" />

  <xacro:include filename="$(find husky_description)/urdf/accessories/kinect_camera.urdf.xacro"/>
  <xacro:include filename="$(find husky_description)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
  <xacro:include filename="$(find husky_description)/urdf/accessories/sensor_arch.urdf.xacro"/>

  <xacro:property name="M_PI" value="3.14159"/>

  <!-- Base Size -->
  <xacro:property name="base_x_size" value="0.98740000" />
  <xacro:property name="base_y_size" value="0.57090000" />
  <xacro:property name="base_z_size" value="0.24750000" />

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.5120" />
  <xacro:property name="track" value="0.5708" />
  <xacro:property name="wheel_vertical_offset" value="0.03282" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1143" />
  <xacro:property name="wheel_radius" value="0.1651" />

  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://husky_description/meshes/base_link.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${base_z_size/4}" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size/2}"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="0 0 ${base_z_size*3/4}" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size*4/5} ${base_y_size} ${base_z_size/2}"/>
      </geometry>
    </collision>
  </link>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin xyz="$(optenv HUSKY_IMU_XYZ 0.19 0 0.149)" rpy="$(optenv HUSKY_IMU_RPY 0 -1.5708 3.1416)" />
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>
  <gazebo reference="imu_link">
  </gazebo>

  <!-- Husky wheel macros -->
  <xacro:husky_wheel wheel_prefix="front_left">
    <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="front_right">
    <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="rear_left">
    <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>
  <xacro:husky_wheel wheel_prefix="rear_right">
    <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:husky_wheel>

  <xacro:husky_decorate />

  <xacro:if value="$(arg laser_enabled)">

    <sick_lms1xx_mount prefix="base"/>

    <sick_lms1xx frame="base_laser" topic="scan" robot_namespace="$(arg robot_namespace)"/>

    <joint name="laser_mount_joint" type="fixed">
      <origin xyz="$(arg laser_xyz)" rpy="$(arg laser_rpy)" />
      <parent link="top_plate_link" />
      <child link="base_laser_mount" />
    </joint>

  </xacro:if>

  <xacro:if value="$(arg kinect_enabled)">

    <xacro:sensor_arch prefix="" parent="top_plate_link">
      <origin xyz="-0.35 0 0.51" rpy="0 0 -3.14"/>
    </xacro:sensor_arch>
    <joint name="kinect_frame_joint" type="fixed">
      <origin xyz="$(arg kinect_xyz)" rpy="$(arg kinect_rpy)" />
      <parent link="sensor_arch_mount_link"/>
      <child link="camera_link"/>
    </joint>

    <xacro:kinect_camera prefix="camera" robot_namespace="$(arg robot_namespace)"/>
  </xacro:if>

 


  <!-- Enable UR5 -->
  <xacro:if value="$(arg ur5_enabled)">

    <xacro:property name="reflect" value="-1" />

    <!-- Spawn arm -->
    <xacro:ur5_robot prefix="ur5_arm_" joint_limited="true"/>

    <!-- Join arm -->
    <joint name="ur5_arm_base" type="fixed">
      <parent link="top_plate_link" />
      <child link="ur5_arm_base_link" />
      <origin xyz="0.3058 0 0.0065" rpy="0.0 0.0 -1.57" />
    </joint>

  </xacro:if>




  <!-- Enable Robotis Manipulator-H -->
  <xacro:if value="$(arg manipulator_h_enabled)">

    <!--<xacro:property name="reflect" value="-1" />--> <!-- WHAT IS THIS???? -->

    <!-- Box to simulate the base support -->
    <link name="box">
      <visual>
        <origin xyz="0 0 0" />
        <geometry>
          <box size="0.225 0.42 0.202" />
        </geometry>
      </visual> 
    </link>
    <gazebo reference="box">
      <material>Gazebo/Orange</material>
    </gazebo>

    <!-- ZZZZZZZZZ -->
    <!-- Husky's main chassis's height = +-24,6cm -->
    <!-- Husky's manipulator h's support height = +- 20,2cm -->
    <!-- The box's height is the same as the Husky's manipulator h's support height, so also 20,2cm -->
    <!-- The center of the box is 20,2cm/2=10,1cm , so origin of the box height is 24,6 + 10,1 = 34,7cm -->

    <!-- XXXXXXXXX -->
    <!-- Husky's main chassis's length = 54,5cm . Half of the Husky is on positive "x" and the other half is on negative "x" -->
    <!-- Box width is 22,5cm, so 54,5/2 - 22,5/2 = 16cm = 0,16m and 0,16m to the left, so -0,16m -> -0.162m actually -->

    <!-- YYYYYYYYY -->
    <!-- Husky's main chassis's width = 22,5cm, which is the same width as the box -->

    <!-- Joint that connects the Husky's plate to the box -->
    <joint name="box_base" type="fixed">
      <parent link="base_link" />
      <child link="box" />
      <origin xyz="-0.162 0 0.347" rpy="0 0 0" />
    </joint>

  
    <!-- Cylinder to simulate the base of the manipulator -->
    <link name="cylinder">
      <visual>
        <origin xyz="0 0 0" />
        <geometry>
          <cylinder length="0.0075" radius="0.08"/> <!-- Measurements not 100% accurate -->
        </geometry>
      </visual> 
    </link>
    <gazebo reference="cylinder">
      <material>Gazebo/Blue</material>
    </gazebo>

    <!-- ZZZZZZZZZ -->
    <!-- The cylinder is on top of the box, so half of the height os the box above its center, plus half of the height of the cylinder = 10,475cm --> 

    <!-- XXXXXXXXX -->
    <!-- The base of the manipulator has a length of 6,6cm and it's 2cm away from the end of the chassis, so the center of the manipulator in "x" is: -->
    <!-- 22,5/2 - 6,6/2 - 2 = 5,95cm = 0,0595m and 0,0595m to the left, so -0,0595m -->

    <!-- YYYYYYYYYY -->
    <!-- The base of the manipulator has a width of 5,5cm and its a 11 cm away from the center of the box, so the center base is at: -->
    <!-- 11 - 5,5/2 = 8,25cm = 0,0825m-->

    <!-- Joint that connects the Husky's plate to the box -->
    <joint name="cylinder_base" type="fixed">
      <parent link="box" />
      <child link="cylinder" />
      <origin xyz="-0.0595 0.0825 0.10475" rpy="0 0 0" />
    </joint>    

    <!-- Joint that connects the box to the arm -->
    <joint name="manipulator_h_arm_base" type="fixed">
      <parent link="cylinder" />
      <child link="link1" />
      <origin xyz="0 0 0.00375" rpy="0.0 0.0 1.57" />
    </joint>

  </xacro:if>


  <!-- Added the vertical laser Hokuyo UST-10LX -->
  <xacro:if value="$(arg vertical_laser_enabled)">
    
    <link name="hokuyo_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
	  <box size="0.001 0.001 0.001"/> <!-- Originally "0 0 0" but it causes Gazebo to crash -->
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://husky_gazebo/meshes/hokuyo.dae"/> <!-- Previously using the file "hokuyo.dae" from the "robot_description" package inside the "agrob_simulator-master" package-->
        </geometry>
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-5" ixy="0" ixz="0" iyy="1e-5" iyz="0" izz="1e-5" />
      </inertial>
    </link>  
  
    <gazebo reference="hokuyo_link">  
      <sensor name="laser" type="ray">
        <pose>0.01 0 0.0175 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>683</samples>
              <resolution>1</resolution>
              <min_angle>-2.09439510239</min_angle>
              <max_angle>2.09439510239</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.2</min>
            <max>4</max>
            <resolution>0.01</resolution>
          </range>
        
          <!--<noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>-->
        </ray>
        
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>laser_vertical</topicName>
          <frameName>hokuyo_link</frameName>
        </plugin>
      
        <always_on>1</always_on>
        <update_rate>10</update_rate>
        <visualize>true</visualize>
      </sensor>
  
    </gazebo> 

    <joint name="vertical_laser_base" type="fixed">
      <origin
        xyz="0.34 0.07 0.94"
        rpy="0 1.33 0" /> <!-- Originally "0 1.33 -0.1" -->  
      <parent link="base_link" />
      <child link="hokuyo_link" />
    </joint>
    
  </xacro:if>




  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>40</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

  <!-- Optional custom includes. -->
  <xacro:include filename="$(arg urdf_extras)" />

</robot>
