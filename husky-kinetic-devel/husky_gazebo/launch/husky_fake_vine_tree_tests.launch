<?xml version="1.0"?>
<launch>

  <!-- World initialization -->
  <arg name="world_name" default="worlds/empty.world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Husky robot initialization -->  
  <arg name="laser_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>
  <arg name="manipulator_h_enabled" default="false"/> <!-- Added the Robotis Manipulator-H -->
  <arg name="ur5_enabled" default="false"/> <!-- Added the UR5 -->
  <arg name="vertical_laser_enabled" default="false"/> <!-- Added the vertical laser Hokuyo UST-10LX -->

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="manipulator_h_enabled" value="$(arg manipulator_h_enabled)"/> <!-- Added the Robotis Manipulator-H -->
    <arg name="ur5_enabled" value="$(arg ur5_enabled)"/> <!-- Added the UR5 -->
    <arg name="vertical_laser_enabled" value="$(arg vertical_laser_enabled)"/> <!-- Added the vertical laser Hokuyo UST-10LX -->
  </include> 

  <!-- RViz file launch -->
  <!--<include file="$(find husky_viz)/launch/view_model.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="manipulator_h_enabled" value="$(arg manipulator_h_enabled)"/> --> <!-- Added the Robotis Manipulator-H -->
    <!--<arg name="ur5_enabled" value="$(arg ur5_enabled)"/> --> <!-- Added the UR5 -->
    <!--<arg name="vertical_laser_enabled" value="$(arg vertical_laser_enabled)"/> --> <!-- Added the vertical laser Hokuyo UST-10LX -->
  <!--</include>-->

  <!-- Manual control using teleop keyboard keys -->
  <node name="husky_manual_control_node" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
    <remap from="cmd_vel" to="husky_velocity_controller/cmd_vel"/>
  </node>

  <!-- Fake localization node in order to simulate the "map" frame -->
  <!-- <node name="fake_localization_node" pkg="fake_localization" type="fake_localization">
    <remap from="base_pose_ground_truth" to="husky_velocity_controller/odom" />
    <param name="odom_frame_id" type="string" value="odom" />
    <param name="delta_x" type="double" value="0" />
    <param name="delta_y" type="double" value="0" />
    <param name="delta_yaw" type="double" value="0" /> 
    <param name="global_frame_id" type="string" value="/map" />
    <param name="base_frame_id" type="string" value="base_link" />
 </node> -->

  <!-- Spawn an vine tree in (x,y,z)=(0,0.7,0) with roll = pi/2 -->
  <node name="tree_node" pkg="gazebo_ros" type="spawn_model" args="-file /home/josebrito/catkin_ws/src/brito_thesis/Vine_tree.SLDPRT/urdf/Vine_tree.SLDPRT.urdf -urdf -model vine_tree -x 1.1 -y 0.6"/>

  <!-- Load node that converts laser distances into point clouds -->
  <node name="laser_to_pcl_node" pkg="laser_to_pcl" type="laser_to_pcl_node" output="screen">
    <remap from="lidar1/scan" to="vertical_laser"/> <!-- Topic to be read by the node -->
  </node>

  <!-- Load node that converts point clouds into a map -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <param name="frame_id" type="string" value="odom" />
    <param name="resolution" value="0.002" /> <!-- Originally was "0.05" -->
    <param name="base_frame_id" type="string" value="odom" /> <!-- Originally was "base_footprint" -->
    <param name="height_map" type="bool" value="true" />
    <param name="sensor_model/max_range" type="double" value="10.0" />
    <param name="sensor_model/hit" type="double" value="0.7" />
    <param name="sensor_model/miss" type="double" value="0.3" />
    <param name="sensor_model/min" type="double" value="0.12" />
    <param name="sensor_model/max" type="double" value="0.97" />
    <param name="latch" type="bool" value="false" />
    <param name="filter_ground" type="bool" value="false" />
    <param name="ground_filter/distance" type="double" value="0.01" />
    <param name="ground_filter/angle" type="double" value="0.15" />
    <param name="ground_filter/plane_distance" type="double" value="0.05" />
    <param name="pointcloud_min_z" type="double" value="0.01" /> <!-- Originally was "-10.0" -->
    <param name="pointcloud_max_z" type="double" value="1.5" />
    <param name="occupancy_min_z" type="double" value="0.01" /> <!-- Originally was "-1.0" -->
    <param name="occupancy_max_z" type="double" value="1.5" />
    <remap from="cloud_in" to="pcl_v" /> <!-- Topic to be read by the node, which is the output topic of the "laser_to_pcl_node" -->
  </node>

</launch>
